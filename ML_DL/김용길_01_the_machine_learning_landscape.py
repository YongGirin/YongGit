# -*- coding: utf-8 -*-
"""김용길_01_the_machine_learning_landscape.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rBG1WEtE7lJDcfyMwe2jSH9ja9kYpDmE
"""

# Python >= 3.5 이상 권장
import sys
assert sys.version_info >= (3,5)

# Scikit learn >= 0.20 권장
import sklearn
assert sklearn.__version__ >= "0.20"

def prepare_country_stats(oecd_bli, gdp_per_capita):
  oecd_bli = oecd_bli[oecd_bli["INEQUALITY"]=="TOT"]
  oecd_bli = oecd_bli.pivot(index="Country", columns="Indicator", values="Value")
  gdp_per_capita.rename(columns={"2015":"GDP per capita"}, inplace=True)
  gdp_per_capita.set_index("Country", inplace=True)
  full_country_stats = pd.merge(left=oecd_bli, right=gdp_per_capita,
                                left_index=True, right_index=True)
  full_country_stats.sort_values(by="GDP per capita", inplace=True)
  remove_indices = [0,1,6,8,33,34,35]
  keep_indices = list(set(range(36)) - set(remove_indices))
  return full_country_stats[["GDP per capita", "Life satisfaction"]].iloc[keep_indices]

# 경로 생성
import os
datapath = os.path.join("datasets", "lifesat", "")

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib as mpl
mpl.rc('axes', labelsize = 14)
mpl.rc('xtick', labelsize = 12)
mpl.rc('ytick',labelsize = 12)

# 데이터 다운로드
import urllib.request
DOWNLOAD_ROOT = "https://raw.githubusercontent.com/rickiepark/handson-ml2/master/"
os.makedirs(datapath, exist_ok=True)
for filename in ("oecd_bli_2015.csv", "gdp_per_capita.csv"):
  print("Downloading", filename)
  url = DOWNLOAD_ROOT + "datasets/lifesat/" + filename
  urllib.request.urlretrieve(url, datapath + filename)

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import sklearn.linear_model

# 데이터 적재
oecd_bli = pd.read_csv(datapath + "oecd_bli_2015.csv", thousands=',')
gdp_per_capita = pd.read_csv(datapath + "gdp_per_capita.csv", thousands=',', delimiter='\t',
                             encoding="latin1", na_values='n/a')
# 데이터 준비
country_stats = prepare_country_stats(oecd_bli, gdp_per_capita)
X = np.c_[country_stats["GDP per capita"]]
# [1,2,3] , [4,5,6] --- np.c --- > [[1,4], [2,5], [3,6]]
# [1,2,3] --- np.c --- > [[1], [2], [3]]
# sklearn은 입력 데이터를 2차원 배열로 받기 때문에
# 보통은 country_stats["GDP per capita"].to_numpy().reshape[-1,1] 
# 방법을 더 많이 사용

y = np.c_[country_stats["Life satisfaction"]]

# 데이터 시각화
country_stats.plot(kind="scatter", x="GDP per capita",
                   y = "Life satisfaction")
plt.show()

# 선형 모델 선택
model = sklearn.linear_model.LinearRegression()

# 모델 훈련
model.fit(X,y)

# 키프로스에 대한 예측
X_new = [[22587]]
print(model.predict(X_new))

plt.scatter(X,y)
plt.scatter(22587, 5.96242328)
plt.show()

"""# 새 섹션"""